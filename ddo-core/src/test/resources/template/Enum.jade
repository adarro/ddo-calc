doctype html
html(xmlns:c='http://www.concordion.org/2007/concordion' xmlns:ext='urn:concordion-extensions:2010')
  head
    title #{name}
  body
    h1 Enter Title - #{name}
    p
      | Simple summary, possibly adding a link
      a(href='http://ddowiki.com/page/Alignment') online external doc for reference
    h2 #{name}
    | #{name} discrete values, which can be derived from case insensitive string values
    .example
      span(ext:embed!="helper().listValues('#{name}')")
    h3 Case Sensitive Operations
    div(c:example='caseSensitive')
      | When case insensitivity is
      span(c:set='#ignoreCase') true
      p
        | Then a search for "
        b(c:set='#searchString') #{values}
        | " should return: (Alpha Sort used for verification)
      table(c:verifyRows='#value : helper().withNames(#searchString,#ignoreCase)')
        tr
          th(c:assertEquals='#value') Matching Values
        tr
          td Enter Expected results in ascending alpha value

    h3 Case Insensitive Operations
    div(c:example='caseInSensitive')
      | When case insensitivity is&#160;
      span(c:set='#ignoreCase') false
      p
        | Search for "
        b(c:set='#searchString') #{ciValues}
        | " should return: (Alpha Sort used for verification)
      div
        | Should return
        span(c:assertEquals='helper().resultCount(#searchString,#ignoreCase)') 1
        |  results
    h3 Invalid Values
    div(c:example='invalidValues')
      | Invalid values should be gracefully filtered out.
      div
        | Search for "
        b(c:set='#searchString') #{singleValue},fake,Doesn't exist
        | should return: <span ext:embed="helper().getValidSingleValue()"/>
        p
          | Case-Sensitive?:
          span(c:set='#ignoreCase') false
        table(c:verifyRows='#value : helper().withNames(#searchString,#ignoreCase)')
          tr
            th(c:assertEquals='#value') Matching Values
          tr
            td Change this to your expected value
