plugins {

    id "scala"
    id "com.diffplug.gradle.spotless" version "3.10.0"
    id "com.github.maiflai.scalatest" version "0.19"
    id "org.scoverage" version "2.1.0"

}

sourceSets {
    test {
        scala {
            srcDirs('src/test/scala')
            exclude '**/*Spec.scala'
            exclude '**/*Helper*'
            exclude '**/*Builder*'
            include '**/*Test.scala'

        }
    }
    acceptanceTest {
        scala {
            srcDir 'src/specs/scala'
        }
        resources {
            srcDirs('src/specs/resources', 'src/test/specs')
        }
        compileClasspath += sourceSets.main.runtimeClasspath
        compileClasspath += sourceSets.test.runtimeClasspath
    }
    integrationTest {
        scala {
            srcDirs('src/test/scala')
            // exclude '**/*Spec.scala'
            // exclude '**/*Helper*'
            // exclude '**/*Builder*'
            include '**/*IT.scala'

        }
    }
}


task acceptanceTest(type: Test) {
    description = "Runs Acceptance Tests"
    testClassesDirs = sourceSets.acceptanceTest.output.classesDirs
    classpath += sourceSets.acceptanceTest.runtimeClasspath

}

acceptanceTest.shouldRunAfter(test)
acceptanceTest.testLogging.showStandardStreams = true   // display test output on console
acceptanceTest.systemProperties['concordion.output.dir'] = "$reporting.baseDir/spec"  // write output to build/reports/spec

task integrationTest(type: Test) {
    description = "Runs Integration Tests"
    // testClassesDirs = sourceSets.acceptanceTest.output.classesDirs
    // classpath += sourceSets.acceptanceTest.runtimeClasspath

}

task allTests {
    dependsOn tasks.withType(Test)
}

configure(acceptanceTest) {
    group = 'verification'
    description = 'Runs Acceptance Testing'
}

description = 'DDO Web'
dependencies {
    compile group: 'org.scala-lang', name: 'scala-library', version: '2.12.3'
    compile group: 'net.ruippeixotog', name: 'scala-scraper_2.12', version: '1.2.0'
    compile group: 'com.typesafe', name: 'config', version: '1.3.2'
    compile group: 'com.typesafe.scala-logging', name: 'scala-logging_2.12', version: '3.7.2'
    compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'
    compile project(':ddo-core')
    testCompile group: 'org.scalatest', name: 'scalatest_2.12', version: '3.0.0'
    testRuntime 'org.pegdown:pegdown:1.4.2'
    testCompile group: 'org.mockito', name: 'mockito-all', version: '2.0.2-beta'
    testCompile group: 'junit', name: 'junit', version: '4.12'
    scoverage 'org.scoverage:scalac-scoverage-plugin_2.12:1.4.0-M2', 'org.scoverage:scalac-scoverage-runtime_2.12:1.4.0-M2'
}


spotless {
    scala {
        target '**/scala/*.scala'
        // exclude '**/.worksheet/*'
        scalafmt()
        // optional: you can specify a specific version or config file
        //  scalafmt('0.5.1').configFile('scalafmt.conf')
    }
}