# This docker-compose file is used to run a local Kafka cluster with Zookeeper and Kafka UI
# Run with docker-compose up -d

version: "3"

services:
  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:7.5.3
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181

  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka:7.5.3
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:v0.7.1
    ports:
      - 9021:8080
    depends_on:
      - kafka
    environment:
      DYNAMIC_CONFIG_ENABLED: true
    volumes:
      - ./configs/kui/dynamic_config.yaml:/etc/kafkaui/dynamic_config.yaml

  postgresql:
    container_name: postgresql
    image: postgres:14
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - ./configs/postgresql/init.sql:/docker-entrypoint-initdb.d/init.sql

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:8.2
    ports:
      - 8088:80
    environment:
      PGADMIN_DEFAULT_EMAIL: user@domain.com
      PGADMIN_DEFAULT_PASSWORD: password
      PGADMIN_SERVER_JSON_FILE: /etc/pgadmin4/servers.json
    volumes:
      - ./configs/pgadmin4/servers.json:/etc/pgadmin4/servers.json
    depends_on:
      - postgresql

  prometheus:
    container_name: prometheus
    image: prom/prometheus:v2.49.1
    ports:
      - 9090:9090
    volumes:
      - ./configs/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"

  # Comment the following to use the locally run Quarkus app
  quarkus-app:
    container_name: quarkus-app
    # image: quarkus/code-with-quarkus # for the native container
    image: quarkus/code-with-quarkus-jvm # for the JVM based container
    build:
      context: .
      dockerfile: src/main/docker/Dockerfile.openj9 #or Dockerfile.jvm
    environment:
      QUARKUS_DATASOURCE_JDBC_URL: jdbc:postgresql://postgresql:5432/postgres
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    ports:
      - 8080:8080
    depends_on:
      - kafka
      - postgresql
      - prometheus
